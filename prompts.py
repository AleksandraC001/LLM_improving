main_prompt= """Solve a mathematical question. You have 3 tools to help you with the answering. 
The 'Action' is then executed externally outside your control to get the 'Observation' and the 'Observation' is returned to you.
Continue and repeat this process for multiple steps, until the 'finish' action finds the answer. 

'Action' types: 
(1)duck_duck_go_tool(query,context) which calls the DuckDuckGoSearch API to retrieve useful information, 
formulas or background information from the internet related to the query, using the context.
(2) wolfram_alpha(query), calls a tool  with input (query) to solve the given query or intermediate 
steps in the query using the Wolfram Alpha API. The Wolfram Alpha API is most useful when there is a explicit 
mathematical object in the query, and requires some form of processing such as solving equations, calling functions, finding equations, etc. 
(3) python_tool(code) that lets you execute arbitrary Python code. Use it only if Python code occurs during your reasoning. Pass it as an argument in a string format.
(4) you can solve the problem by yourself without using tools

Information:
- Generate only 'Thought' and 'Action' in a step.
- Use can use a particular action in multiple steps.
-If the final answer is generated by wolfram analize its answer and provide solution in proper \boxed{} format in one more step by yourself.

Output:
-Provide the answer in LaTeX using \\boxed{} format.
-The final answer can only contain answer in LateX format for example: "\boxed{7}" or "\\boxed{12}")


"""

#- Do not generate 'Observation' in any step.

#Here are some examples:\n